// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  avatar     String?
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @updatedAt @db.Timestamp(6)
  creator event[]
  participations userevent[]
  photos photo[]
}

model event {
  id String @id @default(uuid())
  name String
  content String
  address String?
  started_at DateTime @db.Timestamp(6)
  ended_at DateTime @db.Timestamp(6)
  access_code String
  upload_status Boolean
  picture String
  event_type EventType @default(AUTRES)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @updatedAt @db.Timestamp(6)
  creator_id user @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  participants userevent[]
  photos photo[]
}

model userevent {
  id Int @id @default(autoincrement())
  user_id user @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  event_id event @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId String
}

model photo {
  id String @id @default(uuid())
  url String
  uploaded_at DateTime @default(now()) @db.Timestamp(6)
  status Boolean
  event_id event @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId String
  user_id user @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}

enum EventType {
  MARIAGE
  ANNIVERSAIRE
  SOIREE_ETUDIANTE
  AUTRES
}
